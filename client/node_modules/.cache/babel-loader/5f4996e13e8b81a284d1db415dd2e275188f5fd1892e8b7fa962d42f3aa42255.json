{"ast":null,"code":"var _jsxFileName = \"E:\\\\apps\\\\client\\\\src\\\\components\\\\EditTodo.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Fragment, useState } from 'react';\nimport \"./../assets/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditTodo = todo => {\n  _s();\n  const [descriptionEdit, setDescriptionEdit] = useState(\"\");\n  const [clickedEdit, setClickEdit] = useState(false);\n  const handleEdit = async (e, id) => {\n    e.preventDefault();\n    try {\n      console.log(id);\n      const response = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: descriptionEdit // Assuming descriptionEdit is the new description value\n        })\n      });\n    } catch (err) {\n      console.err(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => setClickEdit(true),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), clickedEdit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-custom\",\n        id: `modal${todo.todo_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          className: \"d-flex align-center-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTodo, \"TIgaCldkN1P4JNmdJPGEW8EFF3Q=\");\n_c = EditTodo;\nexport default EditTodo;\nvar _c;\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"names":["Fragment","useState","jsxDEV","_jsxDEV","_Fragment","EditTodo","todo","_s","descriptionEdit","setDescriptionEdit","clickedEdit","setClickEdit","handleEdit","e","id","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","description","err","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","todo_id","action","type","_c","$RefreshReg$"],"sources":["E:/apps/client/src/components/EditTodo.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Fragment, useState } from 'react';\r\nimport \"./../assets/style.css\"\r\n\r\nconst EditTodo =(todo) =>\r\n{\r\n    const [descriptionEdit, setDescriptionEdit] = useState(\"\");\r\n    const [clickedEdit, setClickEdit] = useState(false);\r\n\r\n    const handleEdit = async (e, id) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            console.log(id)\r\n            const response = await fetch(`http://localhost:5000/todos/${id}`,\r\n            {method : \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                description: descriptionEdit // Assuming descriptionEdit is the new description value\r\n            })\r\n        })\r\n        }\r\n        catch (err) {\r\n            console.err(err);\r\n        }\r\n    }\r\n    return (\r\n            \r\n        <Fragment>\r\n\r\n            {/* <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target={`modal${todo.todo_id}`}>Edit</button> */}\r\n            {/* <div class=\"modal\" id={`modal${todo.todo_id}`}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n                    <div class=\"modal-header\">\r\n                        <h4 class=\"modal-title\"> {todo.description}</h4>\r\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n                    </div>\r\n\r\n                    <div class=\"modal-body\">\r\n                        <form className='form-control d-flex' onSubmit={(e) => {\r\n                            console.log(todo.todo_id)\r\n                            handleEdit(e, todo.todo_id)}}>\r\n                            <input type=\"text\" className='me-1' onChange={(e) => setDescriptionEdit(e.target.value)}/>\r\n                            <button className='btn btn-success' type=\"submit\">Phung Edit</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            <button className='btn btn-primary' onClick={() => setClickEdit(true)}>Edit</button>\r\n            {clickedEdit && \r\n            <>\r\n                <div className='modal-custom' id={`modal${todo.todo_id}`}>\r\n                    <form action=\"\" className='d-flex align-center-items'>\r\n                        <input type=\"text\" />\r\n                        <button type='button' className='btn btn-success'>Edit</button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n            }\r\n        </Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default EditTodo;"],"mappings":";;AAAA,OAAO,sCAAsC;AAC7C,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,OAAO,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAH,QAAA,IAAAI,SAAA;AAE9B,MAAMC,QAAQ,GAAGC,IAAI,IACrB;EAAAC,EAAA;EACI,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACS,WAAW,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,UAAU,GAAG,MAAAA,CAAOC,CAAC,EAAEC,EAAE,KAC/B;IACID,CAAC,CAACE,cAAc,CAAC,CAAC;IAElB,IAAI;MACAC,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;MACf,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BL,EAAG,EAAC,EAChE;QAACM,MAAM,EAAG,KAAK;QACfC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,WAAW,EAAEjB,eAAe,CAAC;QACjC,CAAC;MACL,CAAC,CAAC;IACF,CAAC,CACD,OAAOkB,GAAG,EAAE;MACRV,OAAO,CAACU,GAAG,CAACA,GAAG,CAAC;IACpB;EACJ,CAAC;EACD,oBAEIvB,OAAA,CAACH,QAAQ;IAAA2B,QAAA,gBA6BLxB,OAAA;MAAQyB,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAAC,IAAI,CAAE;MAAAgB,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnFvB,WAAW,iBACZP,OAAA,CAAAC,SAAA;MAAAuB,QAAA,eACIxB,OAAA;QAAKyB,SAAS,EAAC,cAAc;QAACd,EAAE,EAAG,QAAOR,IAAI,CAAC4B,OAAQ,EAAE;QAAAP,QAAA,eACrDxB,OAAA;UAAMgC,MAAM,EAAC,EAAE;UAACP,SAAS,EAAC,2BAA2B;UAAAD,QAAA,gBACjDxB,OAAA;YAAOiC,IAAI,EAAC;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACrB9B,OAAA;YAAQiC,IAAI,EAAC,QAAQ;YAACR,SAAS,EAAC,iBAAiB;YAAAD,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC,gBACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAInB,CAAC;AAAA1B,EAAA,CAvEKF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAyEd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}