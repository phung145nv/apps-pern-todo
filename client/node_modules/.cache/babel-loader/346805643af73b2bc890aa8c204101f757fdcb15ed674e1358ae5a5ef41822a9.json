{"ast":null,"code":"var _jsxFileName = \"E:\\\\apps\\\\client\\\\src\\\\components\\\\EditTodo.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Fragment, useState } from 'react';\nimport \"./../assets/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditTodo = todo => {\n  _s();\n  const [descriptionEdit, setDescriptionEdit] = useState(\"\");\n  const [clickedEdit, setClickEdit] = useState(false);\n  console.log(\"top\");\n  console.log(todo.todo_id);\n  const handleEdit = async (e, id) => {\n    e.preventDefault();\n    try {\n      console.log(id);\n      const response = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: descriptionEdit // Assuming descriptionEdit is the new description value\n        })\n      });\n    } catch (err) {\n      console.err(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => setClickEdit(true),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), clickedEdit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-custom justify-content-center d-flex\",\n        id: `modal${todo.todo_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          className: \"mt-5\",\n          onSubmit: e => {\n            console.log(1);\n            console.log(todo.todo_id);\n            handleEdit(e, todo.todo_id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            onChange: e => setDescriptionEdit(e.target.value),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setClickEdit(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTodo, \"TIgaCldkN1P4JNmdJPGEW8EFF3Q=\");\n_c = EditTodo;\nexport default EditTodo;\nvar _c;\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"names":["Fragment","useState","jsxDEV","_jsxDEV","_Fragment","EditTodo","todo","_s","descriptionEdit","setDescriptionEdit","clickedEdit","setClickEdit","console","log","todo_id","handleEdit","e","id","preventDefault","response","fetch","method","headers","body","JSON","stringify","description","err","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","type","onChange","target","value","_c","$RefreshReg$"],"sources":["E:/apps/client/src/components/EditTodo.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Fragment, useState } from 'react';\r\nimport \"./../assets/style.css\"\r\n\r\nconst EditTodo =(todo) =>\r\n{\r\n    const [descriptionEdit, setDescriptionEdit] = useState(\"\");\r\n    const [clickedEdit, setClickEdit] = useState(false);\r\n    console.log(\"top\")\r\n\r\n    console.log(todo.todo_id)\r\n    const handleEdit = async (e, id) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            console.log(id)\r\n            const response = await fetch(`http://localhost:5000/todos/${id}`,\r\n            {method : \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                description: descriptionEdit // Assuming descriptionEdit is the new description value\r\n            })\r\n        })\r\n        }\r\n        catch (err) {\r\n            console.err(err);\r\n        }\r\n    }\r\n    return (\r\n            \r\n        <Fragment>\r\n\r\n\r\n            <button className='btn btn-primary' onClick={() => setClickEdit(true)}>Edit</button>\r\n            {clickedEdit && \r\n            <>\r\n                <div className='modal-custom justify-content-center d-flex' id={`modal${todo.todo_id}`}>\r\n\r\n                    <form action=\"\" className='mt-5' onSubmit={(e) => {\r\n                        console.log(1);\r\n                        console.log(todo.todo_id);\r\n                        handleEdit(e, todo.todo_id)}}>\r\n                        <input type=\"text\" />\r\n                        <button type='submit' className='btn btn-success' onChange={(e) => setDescriptionEdit(e.target.value)}>Edit</button>\r\n                        <button onClick={()=>setClickEdit(false)}>Close</button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n            }\r\n        </Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default EditTodo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}